# Blog & Auth API Reference - Localhost

## Base URL
```
http://localhost:5000/api
```

## Authentication Endpoints

### 1. User Registration
```http
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john@example.com",
  "password": "password123",
  "confirmPassword": "password123"
}
```

**Response:**
```json
{
  "status": "success",
  "message": "User registered successfully",
  "data": {
    "user": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j0",
      "name": "John Doe",
      "email": "john@example.com",
      "role": "user",
      "createdAt": "2024-01-15T10:30:00.000Z"
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }
}
```

### 2. User Login
```http
POST http://localhost:5000/api/auth/login
Content-Type: application/json

{
  "email": "john@example.com",
  "password": "password123"
}
```

**Response:**
```json
{
  "status": "success",
  "message": "Login successful",
  "data": {
    "user": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j0",
      "name": "John Doe",
      "email": "john@example.com",
      "role": "user",
      "avatar": "https://example.com/avatar.jpg"
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }
}
```

### 3. Get Current User
```http
GET http://localhost:5000/api/auth/me
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

**Response:**
```json
{
  "status": "success",
  "data": {
    "user": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j0",
      "name": "John Doe",
      "email": "john@example.com",
      "role": "user",
      "avatar": "https://example.com/avatar.jpg",
      "createdAt": "2024-01-15T10:30:00.000Z",
      "updatedAt": "2024-01-15T12:45:00.000Z"
    }
  }
}
```

### 4. Logout
```http
POST http://localhost:5000/api/auth/logout
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

**Response:**
```json
{
  "status": "success",
  "message": "Logout successful"
}
```

## Blog Endpoints

### 1. Get All Blog Posts
```http
GET http://localhost:5000/api/blog
```

**Query Parameters:**
- `page=1` - Page number (default: 1)
- `limit=10` - Items per page (default: 10)
- `category=technology` - Filter by category
- `search=react` - Search in title and content
- `sort=createdAt` - Sort by field (default: createdAt)
- `order=desc` - Sort order (asc/desc, default: desc)

**Response:**
```json
{
  "status": "success",
  "data": {
    "posts": [
      {
        "_id": "64f8a1b2c3d4e5f6g7h8i9j1",
        "title": "Getting Started with React",
        "slug": "getting-started-with-react",
        "excerpt": "Learn the basics of React development...",
        "content": "React is a popular JavaScript library...",
        "author": {
          "_id": "64f8a1b2c3d4e5f6g7h8i9j0",
          "name": "John Doe",
          "avatar": "https://example.com/avatar.jpg"
        },
        "category": "technology",
        "tags": ["react", "javascript", "frontend"],
        "featuredImage": "https://example.com/blog-image.jpg",
        "published": true,
        "views": 150,
        "likes": 25,
        "createdAt": "2024-01-15T10:30:00.000Z",
        "updatedAt": "2024-01-15T12:45:00.000Z"
      }
    ],
    "pagination": {
      "currentPage": 1,
      "totalPages": 5,
      "totalPosts": 48,
      "hasNext": true,
      "hasPrev": false
    }
  }
}
```

### 2. Get Single Blog Post
```http
GET http://localhost:5000/api/blog/64f8a1b2c3d4e5f6g7h8i9j1
```

**Alternative by slug:**
```http
GET http://localhost:5000/api/blog/slug/getting-started-with-react
```

**Response:**
```json
{
  "status": "success",
  "data": {
    "post": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j1",
      "title": "Getting Started with React",
      "slug": "getting-started-with-react",
      "excerpt": "Learn the basics of React development...",
      "content": "React is a popular JavaScript library for building user interfaces...",
      "author": {
        "_id": "64f8a1b2c3d4e5f6g7h8i9j0",
        "name": "John Doe",
        "email": "john@example.com",
        "avatar": "https://example.com/avatar.jpg"
      },
      "category": "technology",
      "tags": ["react", "javascript", "frontend"],
      "featuredImage": "https://example.com/blog-image.jpg",
      "published": true,
      "views": 151,
      "likes": 25,
      "comments": [
        {
          "_id": "64f8a1b2c3d4e5f6g7h8i9j2",
          "user": {
            "_id": "64f8a1b2c3d4e5f6g7h8i9j3",
            "name": "Jane Smith",
            "avatar": "https://example.com/avatar2.jpg"
          },
          "content": "Great article! Very helpful for beginners.",
          "createdAt": "2024-01-15T14:20:00.000Z"
        }
      ],
      "createdAt": "2024-01-15T10:30:00.000Z",
      "updatedAt": "2024-01-15T12:45:00.000Z"
    }
  }
}
```

### 3. Create New Blog Post (Auth Required)
```http
POST http://localhost:5000/api/blog
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json

{
  "title": "My New Blog Post",
  "excerpt": "This is a short description...",
  "content": "This is the full content of the blog post...",
  "category": "technology",
  "tags": ["javascript", "nodejs", "backend"],
  "featuredImage": "https://example.com/new-image.jpg",
  "published": true
}
```

**Response:**
```json
{
  "status": "success",
  "message": "Blog post created successfully",
  "data": {
    "post": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j4",
      "title": "My New Blog Post",
      "slug": "my-new-blog-post",
      "excerpt": "This is a short description...",
      "content": "This is the full content of the blog post...",
      "author": "64f8a1b2c3d4e5f6g7h8i9j0",
      "category": "technology",
      "tags": ["javascript", "nodejs", "backend"],
      "featuredImage": "https://example.com/new-image.jpg",
      "published": true,
      "views": 0,
      "likes": 0,
      "createdAt": "2024-01-15T15:30:00.000Z",
      "updatedAt": "2024-01-15T15:30:00.000Z"
    }
  }
}
```

### 4. Update Blog Post (Auth Required)
```http
PUT http://localhost:5000/api/blog/64f8a1b2c3d4e5f6g7h8i9j4
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json

{
  "title": "Updated Blog Post Title",
  "content": "Updated content...",
  "published": false
}
```

**Response:**
```json
{
  "status": "success",
  "message": "Blog post updated successfully",
  "data": {
    "post": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j4",
      "title": "Updated Blog Post Title",
      "slug": "updated-blog-post-title",
      "content": "Updated content...",
      "published": false,
      "updatedAt": "2024-01-15T16:45:00.000Z"
    }
  }
}
```

### 5. Delete Blog Post (Auth Required)
```http
DELETE http://localhost:5000/api/blog/64f8a1b2c3d4e5f6g7h8i9j4
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

**Response:**
```json
{
  "status": "success",
  "message": "Blog post deleted successfully"
}
```

### 6. Like/Unlike Blog Post (Auth Required)
```http
POST http://localhost:5000/api/blog/64f8a1b2c3d4e5f6g7h8i9j1/like
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

**Response:**
```json
{
  "status": "success",
  "message": "Post liked successfully",
  "data": {
    "likes": 26,
    "isLiked": true
  }
}
```

### 7. Add Comment to Blog Post (Auth Required)
```http
POST http://localhost:5000/api/blog/64f8a1b2c3d4e5f6g7h8i9j1/comments
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
Content-Type: application/json

{
  "content": "This is my comment on the blog post."
}
```

**Response:**
```json
{
  "status": "success",
  "message": "Comment added successfully",
  "data": {
    "comment": {
      "_id": "64f8a1b2c3d4e5f6g7h8i9j5",
      "user": "64f8a1b2c3d4e5f6g7h8i9j0",
      "content": "This is my comment on the blog post.",
      "createdAt": "2024-01-15T17:30:00.000Z"
    }
  }
}
```

### 8. Get Blog Categories
```http
GET http://localhost:5000/api/blog/categories
```

**Response:**
```json
{
  "status": "success",
  "data": {
    "categories": [
      {
        "name": "technology",
        "count": 15
      },
      {
        "name": "lifestyle",
        "count": 8
      },
      {
        "name": "travel",
        "count": 12
      }
    ]
  }
}
```

### 9. Get Blog Tags
```http
GET http://localhost:5000/api/blog/tags
```

**Response:**
```json
{
  "status": "success",
  "data": {
    "tags": [
      {
        "name": "javascript",
        "count": 10
      },
      {
        "name": "react",
        "count": 8
      },
      {
        "name": "nodejs",
        "count": 6
      }
    ]
  }
}
```

## Error Responses

### Authentication Error
```json
{
  "status": "fail",
  "message": "Access denied. No token provided.",
  "error": "UNAUTHORIZED"
}
```

### Validation Error
```json
{
  "status": "fail",
  "message": "Validation failed",
  "errors": [
    {
      "field": "title",
      "message": "Title is required"
    },
    {
      "field": "content",
      "message": "Content must be at least 100 characters"
    }
  ]
}
```

### Not Found Error
```json
{
  "status": "fail",
  "message": "Blog post not found"
}
```

### Server Error
```json
{
  "status": "error",
  "message": "Internal server error"
}
```